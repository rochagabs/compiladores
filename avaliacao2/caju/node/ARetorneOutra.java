/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class ARetorneOutra extends POutra
{
    private TRetorne _retorne_;
    private PExp _exp_;
    private TPonto _ponto_;

    public ARetorneOutra()
    {
        // Constructor
    }

    public ARetorneOutra(
        @SuppressWarnings("hiding") TRetorne _retorne_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TPonto _ponto_)
    {
        // Constructor
        setRetorne(_retorne_);

        setExp(_exp_);

        setPonto(_ponto_);

    }

    @Override
    public Object clone()
    {
        return new ARetorneOutra(
            cloneNode(this._retorne_),
            cloneNode(this._exp_),
            cloneNode(this._ponto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARetorneOutra(this);
    }

    public TRetorne getRetorne()
    {
        return this._retorne_;
    }

    public void setRetorne(TRetorne node)
    {
        if(this._retorne_ != null)
        {
            this._retorne_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._retorne_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TPonto getPonto()
    {
        return this._ponto_;
    }

    public void setPonto(TPonto node)
    {
        if(this._ponto_ != null)
        {
            this._ponto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ponto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._retorne_)
            + toString(this._exp_)
            + toString(this._ponto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._retorne_ == child)
        {
            this._retorne_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._ponto_ == child)
        {
            this._ponto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._retorne_ == oldChild)
        {
            setRetorne((TRetorne) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._ponto_ == oldChild)
        {
            setPonto((TPonto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
